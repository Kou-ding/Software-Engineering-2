openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/WIFIRNAS7EN/TravelSet/1.0.0
info:
  version: 1.0.0
  title: travelSet
  description: The API for the EatBacon IOT project
paths:
  /user/{userId}:
    get:
      description: |
        Returns the trips of the specific user from the system
      operationId: getTripsFromDB({userId})
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{userId}/trip:
    post:
      description: |
        The user creates a new trip
      operationId: AddTrip
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Parameters so that the new user can be created.
          [name, destination, dates, budget]
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTrip'
        required: true
      responses:
        '200':
          description: The newly created trip
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{userId}/trip/{tripId}:
    get:
      description: |
        Returns the specific trip from the system
      operationId: loadTripFromDB({tripId})
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The requested trip is returned 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{userId}/trip/{tripId}/print:
    get:
      description: |
        Returns the specific trip from the system
      operationId: prepareContent({tripId})
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: trip response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableTripEntity'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{userId}/trip/{tripId}/Accomodation:
    post:
      description: Add Accomondation to the trip
      operationId: addAccomodation
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: Trip ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Accomodation to add to the trip. Details[name, address, price]
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Accomodation'
        required: true
      responses:
        '200':
          description: pet response 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{userId}/trip/{tripId}/Transportation:
    post:
      description: Transportation to add to the trip
      operationId: addTransportation
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: Transportation to add to the trip 
          detais[name, date, time]
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transportation'
        required: true
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /user/{userId}/trip/{tripId}/day:
    post:
      description: Adds an new day to the trip
      operationId: addDay
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/{userId}/trip/{tripId}/day/{dayId}:
    get:
      description: |
        Returns the specific day from the system
      operationId: findDay({dayId})
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: dayId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  
                
  /user/{userId}/trip/{tripId}/day/{dayId}/Day:
    delete:
      description: deletes a single day from the trip
      operationId: deleteDay({dayId})
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: dayId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: delete Day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/{userId}/trip/{tripId}/day/{dayId}/AddActivity:
    post:
      description: Adds an activity
      operationId: addActivity
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: dayId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/{userId}/trip/{tripId}/day/{dayId}/updateActivities:
    get:
      description: |
        Returns the specific trip from the system
      operationId: getRecommendedActivities(List<Filter>)
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: dayId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/{userId}/trip/{tripId}/day/{dayId}/activity/{ActivityId}:
    delete:
      description: deletes an activity in a day based on the ID supplied
      operationId: deleteActivity
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: dayId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: ActivityId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: delete Activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/{userId}/trip/{tripId}/day/{dayId}/filter/{filterId}:
    put:
      description: |
        Updates a filter ( isActive = !isActive)
      operationId: clickFilter({Filter})
      parameters:
        - name: userId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: tripId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: dayId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - name: filterId
          in: path
          description: tags to filter by
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: the filter that will be aupdated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
        required: true
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Trip:
      required:
        - id
        - destination
        - dates
        - budget
        - isPast
        - days
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        destination:
          type: string
        dates:
          type: string
        budget:
          type: integer
        days:
          type: object
        accomodation:
          type: object
        transportation:
          type: object
        isPast:
          type: boolean
        daysList:
          type: array
          items:
            type: integer
          
          
    NewTrip:
      required:
        - budget
        - dates
        - destination
      type: object
      properties:
        name:
          type: string
        destination:
          type: string
        dates:
          type: string
        budget:
          type: integer
    Activity:
      required:
        - description
        - lockedStatus
        - name
        - filters
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        lockedStatus:
          type: boolean
        filters:
          type: object
    Budget:
      required:
        - price
      type: object
      properties:
        price:
          type: integer
    Filter:
      required:
        - id
        - name
        - isActive
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        isActive:
          type: boolean
    PrintableTripEntity:
      required:
        - id
        - destination
        - dates
        - budget
        - transportationDetails
        - accomodationDetails
        - isPDF
      type: object
      properties:
        id:
          type: integer
        destination:
          type: string
        dates:
          type: string
        budget:
          type: integer
        transportationDetails:
          type: string
        accomodationDetails:
          type: string
        isPDF:
          type: boolean
    Transportation:
      required:
        - date
        - name
        - time
      type: object
      properties:
        name:
          type: string
        date:
          type: string
        time:
          type: integer
    Accomodation:
      required:
        - address
        - name
        - price
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        price:
          type: integer
          
    Day:
      required:
        - id
        - dayNumber
      type: object
      properties:
        id:
          type: integer
        dayNumber:
          type: integer
        activityList:
          type: array
          items:
            type: object
            
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string